package com.semih.p07_methods;

import java.util.ArrayList;
import java.util.List;

import org.springframework.stereotype.Component;

import com.semih.p02_entity.PlayerAttributes;

@Component
public class CreatePlayerAttributes {

	String[] defPosList = { "GK", "DC", "DL", "DR", "DM", "MC", "ML", "MR", "AMC", "AML", "AMR", "ST" };

	float[][] defAttList = {
			{ 13, 13, 13, 12, 12, 12, 8, 8, 8, 15, 15, 15, 7, 7, 7, 9, 9, 9, 5, 5, 5, 11, 11, 11 },
			{ 15, 15, 15, 13, 13, 13, 12, 12, 12, 11, 11, 11, 9, 9, 9, 7, 7, 7, 8, 8, 8, 5, 5, 5 },
			{ 12, 12, 12, 9, 9, 9, 15, 15, 15, 5, 5, 5, 13, 13, 13, 7, 7, 7, 11, 11, 11, 8, 8, 8 },
			{ 12, 12, 12, 9, 9, 9, 15, 15, 15, 5, 5, 5, 13, 13, 13, 7, 7, 7, 11, 11, 11, 8, 8, 8 },
			{ 7, 7, 7, 15, 15, 15, 11, 11, 11, 9, 9, 9, 8, 8, 8, 12, 12, 12, 13, 13, 13, 5, 5, 5 },
			{ 5, 5, 5, 11, 11, 11, 15, 15, 15, 8, 8, 8, 9, 9, 9, 13, 13, 13, 12, 12, 12, 7, 7, 7 },
			{ 8, 8, 8, 5, 5, 5, 13, 13, 13, 7, 7, 7, 15, 15, 15, 9, 9, 9, 12, 12, 12, 11, 11, 11 },
			{ 8, 8, 8, 5, 5, 5, 13, 13, 13, 7, 7, 7, 15, 15, 15, 9, 9, 9, 12, 12, 12, 11, 11, 11 },
			{ 8, 8, 8, 11, 11, 11, 5, 5, 5, 9, 9, 9, 7, 7, 7, 15, 15, 15, 13, 13, 13, 12, 12, 12 },
			{ 7, 7, 7, 8, 8, 8, 9, 9, 9, 5, 5, 5, 13, 13, 13, 11, 11, 11, 15, 15, 15, 12, 12, 12 },
			{ 7, 7, 7, 8, 8, 8, 9, 9, 9, 5, 5, 5, 13, 13, 13, 11, 11, 11, 15, 15, 15, 12, 12, 12 },
			{ 5, 5, 5, 7, 7, 7, 8, 8, 8, 13, 13, 13, 11, 11, 11, 12, 12, 12, 9, 9, 9, 15, 15, 15 }, };

	int[][] oyuncuLeveli = {
			{ 39, 100, 191, 313, 457, 610, 731, 821, 882, 921, 946, 962, 972, 979, 985, 990, 994, 997, 999, 1000 },
			{ 30, 78, 152, 259, 395, 547, 682, 788, 862, 910, 940, 959, 971, 979, 985, 990, 994, 997, 999, 1000 },
			{ 23, 60, 118, 207, 332, 479, 626, 749, 838, 896, 933, 956, 970, 979, 985, 990, 994, 997, 999, 1000 },
			{ 17, 45, 90, 161, 268, 410, 562, 701, 807, 878, 923, 951, 968, 978, 985, 990, 994, 997, 999, 1000 },
			{ 12, 33, 67, 122, 208, 335, 491, 644, 769, 855, 910, 944, 965, 977, 985, 990, 994, 997, 999, 1000 },
			{ 9, 24, 50, 92, 159, 264, 412, 576, 721, 825, 892, 934, 960, 975, 984, 990, 994, 997, 999, 1000 },
			{ 7, 18, 37, 69, 121, 203, 330, 498, 661, 787, 869, 921, 953, 972, 983, 990, 994, 997, 999, 1000 },
			{ 5, 13, 27, 51, 90, 154, 254, 408, 589, 740, 840, 904, 943, 967, 981, 989, 994, 997, 999, 1000 },
			{ 3, 9, 19, 37, 66, 114, 194, 314, 501, 683, 803, 883, 931, 960, 978, 988, 994, 997, 999, 1000 },
			{ 2, 6, 13, 26, 48, 83, 143, 243, 383, 616, 756, 856, 916, 951, 973, 986, 993, 997, 999, 1000 },
			{ 1, 4, 10, 20, 38, 67, 115, 195, 315, 502, 684, 804, 884, 932, 961, 979, 989, 995, 998, 1000 },
			{ 1, 3, 8, 16, 30, 54, 93, 157, 257, 411, 592, 743, 843, 907, 946, 970, 984, 992, 997, 1000 },
			{ 1, 3, 7, 14, 25, 44, 76, 128, 210, 337, 505, 667, 793, 875, 927, 959, 978, 989, 996, 1000 },
			{ 1, 3, 6, 12, 21, 36, 62, 104, 171, 276, 424, 587, 731, 835, 902, 944, 970, 985, 994, 1000 },
			{ 1, 3, 6, 11, 19, 31, 52, 86, 141, 227, 354, 510, 660, 784, 870, 925, 959, 980, 992, 1000 },
			{ 1, 3, 6, 10, 17, 27, 44, 72, 117, 188, 295, 437, 587, 724, 829, 900, 945, 973, 990, 1000 },
			{ 1, 3, 6, 10, 16, 25, 39, 62, 99, 157, 246, 371, 517, 659, 780, 868, 926, 963, 986, 1000 },
			{ 1, 3, 6, 10, 15, 23, 35, 54, 84, 132, 206, 313, 449, 593, 725, 830, 903, 951, 981, 1000 },
			{ 1, 3, 6, 10, 15, 22, 32, 48, 73, 112, 173, 264, 386, 526, 667, 786, 875, 936, 975, 1000 },
			{ 1, 3, 6, 10, 15, 21, 30, 43, 64, 96, 146, 222, 329, 460, 609, 739, 843, 918, 968, 1000 }
	};

	float[][] ekleList = {
			{ -14, 25, 19, 14, 10, 8, 6, 4, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
			{ -13, 67, 50, 37, 27, 20, 15, 11, 8, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 },
			{ -12, 139, 102, 75, 55, 41, 30, 22, 16, 11, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 },
			{ -11, 264, 193, 141, 103, 76, 56, 41, 30, 21, 14, 12, 11, 10, 10, 10, 10, 10, 10, 10, 10 },
			{ -10, 481, 351, 256, 187, 137, 100, 73, 53, 38, 26, 22, 19, 17, 16, 15, 15, 15, 15, 15, 15 },
			{ -9, 859, 626, 456, 333, 243, 177, 129, 93, 67, 47, 39, 33, 28, 25, 23, 22, 21, 21, 21, 21 },
			{ -8, 1510, 1106, 805, 587, 428, 312, 227, 164, 118, 84, 68, 56, 47, 40, 35, 32, 30, 29, 28, 28 },
			{ -7, 2572, 1928, 1415, 1031, 751, 547, 398, 288, 208, 149, 119, 96, 79, 66, 56, 49, 44, 41, 38, 37 },
			{ -6, 4108, 3229, 2448, 1807, 1316, 958, 697, 505, 366, 263, 209, 167, 135, 110, 91, 77, 67, 60, 54, 50 },
			{ -5, 5975, 4999, 4017, 3097, 2302, 1677, 1220, 885, 642, 464, 367, 291, 233, 187, 152, 125, 105, 91, 79, 71 },
			{ -4, 7839, 6962, 5987, 4944, 3895, 2930, 2135, 1550, 1125, 815, 643, 508, 404, 322, 258, 209, 171, 143, 121, 105 },
			{ -3, 9372, 8728, 7952, 7036, 5995, 4863, 3725, 2715, 1972, 1430, 1126, 888, 703, 557, 443, 355, 286, 234, 193, 162 },
			{ -2, 10433, 10028, 9518, 8878, 8088, 7129, 6001, 4730, 3454, 2508, 1973, 1553, 1226, 968, 766, 609, 486, 392, 318, 261 },
			{ -1, 11085, 10850, 10551, 10167, 9678, 9056, 8266, 7266, 6001, 4394, 3455, 2718, 2141, 1687, 1331, 1053, 835, 667, 535, 432 },
			{ 0, 11464, 11331, 11162, 10944, 10665, 10309, 9855, 9278, 8542, 7602, 6002, 4733, 3731, 2940, 2317, 1829, 1445, 1147, 913, 730 },
			{ 1, 11681, 11607, 11512, 11389, 11231, 11029, 10771, 10443, 10024, 9488, 8543, 7268, 6006, 4873, 3910, 3119, 2478, 1969, 1564, 1245 },
			{ 2, 11806, 11765, 11713, 11644, 11555, 11441, 11295, 11109, 10871, 10566, 10025, 9280, 8270, 7136, 6008, 4965, 4046, 3270, 2626, 2102 },
			{ 3, 11878, 11856, 11828, 11790, 11741, 11677, 11595, 11490, 11355, 11182, 10872, 10445, 9859, 9063, 8099, 7053, 6013, 5038, 4161, 3401 },
			{ 4, 11920, 11908, 11894, 11874, 11847, 11812, 11766, 11708, 11632, 11534, 11356, 11111, 10775, 10316, 9689, 8894, 7975, 6995, 6024, 5100 },
			{ 5, 11945, 11939, 11932, 11922, 11908, 11889, 11864, 11832, 11790, 11735, 11633, 11492, 11299, 11036, 10676, 10183, 9540, 8759, 7879, 6956 },
			{ 6, 11961, 11958, 11955, 11950, 11943, 11933, 11920, 11903, 11880, 11850, 11791, 11710, 11599, 11448, 11242, 10960, 10573, 10058, 9411, 8650 },
			{ 7, 11971, 11970, 11969, 11967, 11964, 11959, 11952, 11943, 11931, 11915, 11881, 11834, 11770, 11684, 11566, 11405, 11184, 10880, 10472, 9947 },
			{ 8, 11978, 11978, 11978, 11977, 11976, 11974, 11971, 11966, 11960, 11952, 11932, 11905, 11868, 11819, 11752, 11660, 11534, 11361, 11124, 10804 },
			{ 9, 11984, 11984, 11984, 11984, 11984, 11983, 11982, 11980, 11977, 11973, 11961, 11945, 11924, 11896, 11858, 11806, 11735, 11637, 11503, 11320 },
			{ 10, 11989, 11989, 11989, 11989, 11989, 11989, 11989, 11988, 11987, 11985, 11978, 11968, 11956, 11940, 11919, 11890, 11850, 11795, 11720, 11618 },
			{ 11, 11993, 11993, 11993, 11993, 11993, 11993, 11993, 11993, 11993, 11992, 11988, 11982, 11975, 11966, 11954, 11938, 11916, 11886, 11845, 11789 },
			{ 12, 11996, 11996, 11996, 11996, 11996, 11996, 11996, 11996, 11996, 11996, 11994, 11990, 11986, 11981, 11975, 11966, 11954, 11938, 11917, 11888 },
			{ 13, 11998, 11998, 11998, 11998, 11998, 11998, 11998, 11998, 11998, 11998, 11997, 11995, 11993, 11990, 11987, 11983, 11977, 11969, 11959, 11945 },
			{ 14, 11999, 11999, 11999, 11999, 11999, 11999, 11999, 11999, 11999, 11999, 11999, 11998, 11997, 11996, 11995, 11993, 11991, 11988, 11984, 11979 },
			{ 15, 12000, 12000, 12000, 12000, 12000, 12000, 12000, 12000, 12000, 12000, 12000, 12000, 12000, 12000, 12000, 12000, 12000, 12000, 12000, 12000 }
	};

	public PlayerAttributes setAttributes(String position, Integer altyapi, Integer age, String countPlayer) {
		List<Float> newAtt = new ArrayList<>();
		int randAltyapi = (int) (Math.random() * 1000) + 1;

		int oyuncuLevel = 0;
		if (countPlayer.equals("all")) {
			oyuncuLevel = altyapi;
		} else {
			for (int i = 0; i < 20; i++) {
				if (randAltyapi <= oyuncuLeveli[altyapi - 1][i]) {
					oyuncuLevel = i + 1;
					break;
				}
			}
		}

		float strong = 0;
		for (int i = 0; i < defPosList.length; i++) {
			if (position.equals(defPosList[i])) { // parametre olarak gelen pozisyon kontrolü
				for (int j = 0; j < 24; j++) { // her bir beceri özelliği için ayrı bir hesaplama
					int randBec = (int) (Math.random() * 12000) + 1;
					for (int k = 0; k < 30; k++) {
						if (randBec <= ekleList[k][oyuncuLevel]) {
							float beceri = defAttList[i][j] + ekleList[k][0];
							beceri = beceri < 1 ? 1 : beceri > 20 ? 20 : beceri;

							float carpan = (float) (age == 14 ? 0.5
									: age == 15 ? 0.7
											: age == 16 ? 0.75
													: age == 17 ? 0.81
															: age == 18 ? 0.87
																	: age == 19 ? 0.91
																			: age == 20 ? 0.94
																					: age == 21 ? 0.97
																							: age == 22 ? 0.99
																									: age == 31 ? 0.99
																											: age == 32 ? 0.98
																													: age == 33 ? 0.97
																															: age == 34 ? 0.95
																																	: age == 35 ? 0.93
																																			: age == 36 ? 0.9
																																					: age == 37 ? 0.87
																																							: age == 38 ? 0.84
																																									: age == 39 ? 0.79 : 1);

							beceri = beceri * carpan;
//							strong = strong + beceri * defAttList[i][j] * defAttList[i][j] * 5 / 2634;
							strong = (float) (strong + Math.pow(defAttList[i][j], 4) * beceri * 5 / 384738);
							newAtt.add(beceri); // newAtt.add(Float.parseFloat(String.format("%.2f", beceri)));
							break;
						}
					}
				}
				break;
			}
		}
		newAtt.add(strong);

		PlayerAttributes playerAttributes = new PlayerAttributes();

		for (int i = 0; i < 25; i++) {
			playerAttributes.setTopKesme(newAtt.get(0));
			playerAttributes.setTopKapma(newAtt.get(1));
			playerAttributes.setMarkaj(newAtt.get(2));
			playerAttributes.setLiderlik(newAtt.get(3));
			playerAttributes.setSogukkanlilik(newAtt.get(4));
			playerAttributes.setKararlilik(newAtt.get(5));
			playerAttributes.setGuc(newAtt.get(6));
			playerAttributes.setDayaniklilik(newAtt.get(7));
			playerAttributes.setCeviklik(newAtt.get(8));
			playerAttributes.setKafaIsabeti(newAtt.get(9));
			playerAttributes.setKafaVurusu(newAtt.get(10));
			playerAttributes.setZiplama(newAtt.get(11));
			playerAttributes.setDripling(newAtt.get(12));
			playerAttributes.setHiz(newAtt.get(13));
			playerAttributes.setAniHiz(newAtt.get(14));
			playerAttributes.setYetenek(newAtt.get(15));
			playerAttributes.setTopKontrolu(newAtt.get(16));
			playerAttributes.setFalso(newAtt.get(17));
			playerAttributes.setOrta(newAtt.get(18));
			playerAttributes.setPas(newAtt.get(19));
			playerAttributes.setGorus(newAtt.get(20));
			playerAttributes.setBitiricilik(newAtt.get(21));
			playerAttributes.setSut(newAtt.get(22));
			playerAttributes.setPlase(newAtt.get(23));

			playerAttributes.setStrong(Math.round(newAtt.get(24)));
		}

		return playerAttributes;
	}

}
